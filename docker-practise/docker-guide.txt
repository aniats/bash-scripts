Small CheetSheet

sudo docker run -ti debian:buster /bin/bash == ti - interactive terminal (it/ti)
sudo docker ps -a ==  посмотреть все контейнеры, включая остановленные
sudo docker images == посмотреть все образы
sudo docker rm *code_name_for_container* == удалить контейнер
sudo docker rmi *image_name* == удалить образ
sudo docker *container_name* exec *command* == выполнить команду в контейнере
sudo docker run --rm debian:buster == запустить контейнер и удалить его сразу после выхода

Задача № 2: Запуск команд внутри базового контейнера

1. sudo docker pull debian:buster
2. sudo docker ls
3. sudo docker run -ti debian:buster /bin/bash
4. apt-get update
5. apt-get install squid
6. squid --help
7. exit
8. squid --help

Задача № 3: Проверка списка локальных контейнеров и образов

1. sudo docker ps
2. sudo docker ps -a

Задача № 6: Предоставление доступа к файловой системе хоста

1. mkdir /tmp/common-data
2. cd /tmp/common-data
3. sudo docker run --rm -ti --mount type=bind,source="/tmp/common-data",target="/var/common-data" debian:buster /bin/bash

Задача № 7: Предоставление доступа на чтение к файловой системе хоста

1. sudo docker run --rm -ti --mount type=bind,source="/tmp/common-data",target="/var/common-data",readonly debian:buster /bin/bash

Задача № 8: Предоставление доступа к сетевым службам контейнера

1. sudo docker run --rm -ti --mount type=bind,source="/var/www/docker-static-site",target="/var/www/host-site",readonly -p 8080:80 debian:buster /bin/bash
2. apt-get update
3. apt-get install nginx
4. Create on VM index.html file in /var/www/docker-static-site
5. apt-get install nano
6. sudo nano default -> edit root to "root /var/www/host-site;"
7. nginx -t
8. /usr/sbin/nginx -g 'daemon on; master_process on;'
9. Check on VM: curl http://localhost:8080/
10. /usr/sbin/nginx -s stop
